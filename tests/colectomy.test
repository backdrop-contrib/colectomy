<?php

/**
 * Tests the visibility of the Colectomy managed labels.
 */
class ColectomyTestCase extends BackdropWebTestCase {
  protected $account;

  /**
   * {@inheritdoc}
   * Set up function creates a user and assigns associated privileges.
   */
  public function setUp() {
    parent::setUp('colectomy');
    $this->account = $this->backdropCreateUser(array(
      'use text format full_html',
      'access administration pages',
      'administer content types',
      'administer nodes',
      'bypass node access',
    ));
    $this->backdropLogin($this->account);
  }

  /**
   * Sets the label to 'abovec' on the body field and asserts the lack of a
   * colon.
   */
  public function testColectomyBodyNoColon() {
    // Change the label display mode on the body field.
    $edit = array(
      'fields[body][label]' => 'abovec',
    );
    $this->backdropPost('admin/structure/types/manage/article/display', $edit, t('Save'));
    // Create a basic article node.
    $edit = array();
    $edit['title'] = $this->randomName(8);
    $edit["body[und][0][value]"] = $this->randomName(16);
    $this->backdropPost('node/add/article', $edit, t('Save'));
    // Assert the body label does not have a colon.
    $this->assertText('Body&nbsp;', 'Body label found');
  }

  /**
   * Sets the label to 'above' on the body field and asserts the existence of a
   * colon.
   */
  public function testColectomyBodyWithColon() {
    // Change the label display mode on the body field.
    $edit = array(
      'fields[body][label]' => 'above',
    );
    $this->backdropPost('admin/structure/types/manage/article/display', $edit, t('Save'));
    // Create a basic article node.
    $edit = array();
    $edit['title'] = $this->randomName(8);
    $edit["body[und][0][value]"] = $this->randomName(16);
    $this->backdropPost('node/add/article', $edit, t('Save'));
    // Assert the body label has a colon.
    $this->assertText('Body:', 'Body label found');
  }
}
